import 'package:flutter/material.dart';import 'package:restaurant_app/components/database_con.dart';import '../constants.dart';class AddModifier extends StatefulWidget {  static const String id='add_modifier';  @override  _AddModifierState createState() => _AddModifierState();}class _AddModifierState extends State<AddModifier> {  String modifierDescription;  TextEditingController modifierController=TextEditingController();  @override  Widget build(BuildContext context) {    return  SafeArea(      child: Scaffold(        appBar: AppBar(          title: Text('Posimate'),          backgroundColor: kGreenColor,        ),        body: Container(          padding: EdgeInsets.all(8.0),          width: MediaQuery.of(context).size.width/2,          child: ListView(            scrollDirection: Axis.vertical,            children: <Widget>[              Text(                'Modifier',                style: TextStyle(                  fontWeight: FontWeight.bold,                  fontSize: MediaQuery.of(context).textScaleFactor*20,                ),              ),              TextField(                controller: modifierController,                onChanged: (value) {                  modifierDescription=value;                },                keyboardType:                TextInputType.name,                decoration: InputDecoration(                  border:                  OutlineInputBorder(),                ),              ),              SizedBox(height: 20.0,),              TextButton(                onPressed: ()async {                  String inside='not';                  for(int i=0;i<modifier.length;i++){                    if(modifier[i].toString().toLowerCase() == modifierDescription.toLowerCase()){                      inside='contains';                      showDialog(                          context: context,                          builder: (context) => AlertDialog(                            title: Text("Error"),                            content: Text("Modifier Exists"),                            actions: <Widget>[                              // usually buttons at the bottom of the dialog                              new TextButton(                                child: new Text("Close"),                                onPressed: () {                                  Navigator.of(context).pop();                                },                              ),                            ],                          )                      );                    }                  }                  if(inside=='not'){                    String body='$modifierDescription';                    await insertData(body,'modifier_data');                    modifier.add(body);                    modifierController.clear();                  }                },                child: Container(                  padding: EdgeInsets.all(8.0),                  child: Text('ADD',                    style: TextStyle(                      fontSize: MediaQuery.of(context).textScaleFactor*20,                      color: Colors.white,                      letterSpacing: 1.5,                    ),                  ),                  decoration: BoxDecoration(                    color: kGreenColor,                    borderRadius:                    BorderRadius.circular(15.0),                  ),                ),              ),            ],          ),        ),      ),    );  }}